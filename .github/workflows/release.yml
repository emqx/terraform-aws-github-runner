name: Release
on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  lambdas:
    name: Build lambdas
    runs-on: ubuntu-latest
    env:
      OUTPUT_DIR: lambda_output
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # ratchet:actions/checkout@v4
      - name: Build lambdas dist
        run: .ci/build.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lambdas
          path: $OUTPUT_DIR/*.zip
          retention-days: 1

  ami:
    name: Build AMI
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    container:
      image: index.docker.io/hashicorp/packer@sha256:297bbbbbbf3ce9e0431ac1e8f02934b20e1197613f877b55dfdb1ebfd94eb748 # ratchet:index.docker.io/hashicorp/packer:1.8.6
    strategy:
      matrix:
        image:
          - emqx-amd64
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # ratchet:actions/checkout@v4
      - name: Build AMI
        id: build_ami
        working-directory: images/${{ matrix.image }}
        run: |
          packer init .
          packer build github_agent.ubuntu.pkr.hcl
          echo "ami_id=$(jq -r '.builds[0].artifact_id|split(":")[1]' ./manifest.json)" | tee -a $GITHUB_OUTPUT
      - name: Update AMI ID in SSM
        run: |
          aws ssm put-parameter --name /github-action-runners/ci/runners/ami_id --value ${{ steps.build_ami.outputs.ami_id }} --type String --overwrite

  deploy:
    name: Deploy
    needs:
      - ami
      - lambdas
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:1.5.3
    env:
      AWS_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # ratchet:actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: lambdas
          path: lambda_output
      - name: Deploy
        working-directory: emqx
        run: |
          terraform init
          terraform apply -auto-approve
